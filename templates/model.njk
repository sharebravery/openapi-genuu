{% for type in list %}
{# 1. 先生成所有字段枚举 #}
{# 不再生成 export enum #}

{# 2. 生成 class/interface #}
{% if type.props.length %}
{% if type.description %}/** {{ type.description }} */
{% endif %}
{% if type.isEnum %}
export type {{ type.typeName | safe }} = {{ type.type }};
{% else %}
{% if useInterface %}
export interface {{ type.typeName | safe }} {
{% else %}
export class {{ type.typeName | safe }} {
{% endif %}
{% for prop in type.props %}
{% for p in prop %}
{% if p.comment %}    /** {{ p.comment }} */
{% endif %}{% if p["$ref"] and not p.name %}    // {{ p.$ref }}
    {{ p.type | safe }}
{% else %}    {{ p.name }}{{ '?' if not p.required }}: {% if p.isEnum and enumStyle == 'enum' and p.enum %}{{ p.enum | map('tojson') | join(' | ') | replace('"', "'") }}{% else %}{{ p.type | safe }}{% endif %}{% if not useInterface and p.type !== 'string' and p.initialValue != null and not (p.isEnum and enumStyle == 'enum' and p.enum) %} = {{ p.initialValue }}{% endif %};
{% endif %}
{% endfor %}
{% endfor %}
}
{% endif %}
{% else %}
{% if type.isEnum %}
export type {{ type.typeName | safe }} = {{ type.type }};
{% else %}
export type {{ type.typeName | safe }} = {{ type.type }};
{% endif %}
{% endif %}
{% endfor %}
